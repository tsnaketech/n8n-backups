{
    "createdAt": "2025-08-23T21:53:58.420Z",
    "updatedAt": "2025-09-21T18:53:52.000Z",
    "id": "aw4R5UbolnyUZ37J",
    "name": "Video - Quiz",
    "active": false,
    "isArchived": false,
    "nodes": [
        {
            "parameters": {
                "resource": "audio",
                "input": "={{ $json.voice_script }}",
                "voice": "shimmer",
                "options": {
                    "response_format": "aac"
                }
            },
            "type": "@n8n/n8n-nodes-langchain.openAi",
            "typeVersion": 1.8,
            "position": [
                928,
                112
            ],
            "id": "9d5b3f0c-550b-4a94-bfdb-19a4e6f20eee",
            "name": "Generate audio",
            "credentials": {
                "openAiApi": {
                    "id": "H0VcOhL36gFHQbme",
                    "name": "OpenAi mickael.lcq account"
                }
            },
            "disabled": true
        },
        {
            "parameters": {
                "operation": "update",
                "tableId": "QCM Questions",
                "dataToSend": "autoMapInputData"
            },
            "type": "n8n-nodes-base.supabase",
            "typeVersion": 1,
            "position": [
                -400,
                256
            ],
            "id": "9b1ec131-843a-4593-9d46-f3712eaee124",
            "name": "Update a row",
            "credentials": {
                "supabaseApi": {
                    "id": "WbnVqEv2ZGhdAeSX",
                    "name": "Supabase SnakeTech"
                }
            },
            "disabled": true
        },
        {
            "parameters": {
                "url": "https://westeurope.tts.speech.microsoft.com/cognitiveservices/voices/list",
                "authentication": "genericCredentialType",
                "genericAuthType": "httpHeaderAuth",
                "sendQuery": true,
                "queryParameters": {
                    "parameters": [
                        {
                            "name": "Locale",
                            "value": "fr-FR"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 4.2,
            "position": [
                1168,
                128
            ],
            "id": "8730a3a2-5524-4cb4-afad-b0df047a9caa",
            "name": "Get Voices",
            "credentials": {
                "httpHeaderAuth": {
                    "id": "l6NvN4FQFZ0OQb13",
                    "name": "Azure SnakeTech account"
                }
            }
        },
        {
            "parameters": {
                "method": "POST",
                "url": "https://api.replicate.com/v1/models/leonardoai/lucid-origin/predictions",
                "authentication": "genericCredentialType",
                "genericAuthType": "httpBearerAuth",
                "sendHeaders": true,
                "headerParameters": {
                    "parameters": [
                        {
                            "name": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "name": "Prefer",
                            "value": "wait"
                        }
                    ]
                },
                "sendBody": true,
                "specifyBody": "json",
                "jsonBody": "={\n  \"input\": {\n      \"prompt\": \"Create a background visual representation for this quiz question: {{ $json.text }}. Style: modern, colorful background, no text, no text, no text, no characters, does not answer the question, high quality\",\n      \"style\": \"none\",\n      \"contrast\": \"medium\",\n      \"num_images\": 1,\n      \"aspect_ratio\": \"9:16\",\n      \"prompt_enhance\": true,\n      \"generation_mode\": \"standard\"\n  }\n}\n",
                "options": {}
            },
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 4.2,
            "position": [
                1168,
                384
            ],
            "id": "f1124172-cac5-4d93-ae53-831449ba999f",
            "name": "Replicate leonardoai/lucid-origin",
            "executeOnce": true,
            "credentials": {
                "httpHeaderAuth": {
                    "id": "3sytPF58vLXwSQtC",
                    "name": "NocoDB"
                },
                "httpBearerAuth": {
                    "id": "3cU5roeQm6SqG6i6",
                    "name": "Replicate Bearer Auth account"
                }
            }
        },
        {
            "parameters": {
                "text": "={{ $json.question }}",
                "translateTo": "EN-GB",
                "additionalFields": {}
            },
            "type": "n8n-nodes-base.deepL",
            "typeVersion": 1,
            "position": [
                960,
                384
            ],
            "id": "5ef4e151-eefe-4cdc-959d-b95d6bb29b71",
            "name": "Translate a language",
            "credentials": {
                "deepLApi": {
                    "id": "xlHLi2jtbfIcs8L6",
                    "name": "DeepL account poubello"
                }
            }
        },
        {
            "parameters": {
                "url": "={{ $json.output }}",
                "options": {}
            },
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 4.2,
            "position": [
                1392,
                384
            ],
            "id": "be508378-fda0-4d8d-b85d-72bc2b35047a",
            "name": "HTTP Request",
            "executeOnce": false
        },
        {
            "parameters": {
                "language": "python",
                "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nglob = _('Global Fields').first().json\nnumber = int(glob.question)\nitems = _('Rename Keys').all()[:number]\nreturn items"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                736,
                560
            ],
            "id": "182a4a2e-240f-4813-96e9-f07331316cac",
            "name": "Get limited question"
        },
        {
            "parameters": {
                "language": "python",
                "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nimport html\nimport os\n\nglob = _('Global Fields').first().json\naudio_background = html.escape(glob.get(\"audio_background\", \"\"))\naudio_break = html.escape(glob.get(\"audio_break\", \"\"))\naudio_correct_answer = html.escape(glob.get(\"audio_correct_answer\", \"\"))\n\nfor item in _input.all():\n\n  voice_script = \"\"\n\n  voice_script += \"<speak version='1.0' xml:lang='fr-FR'>\"\n  if audio_background:\n    voice_script += f\"\"\"<mstts:backgroundaudio\n        src='{audio_background}'\n        volume='30' fadein='1500' fadeout='2000'/>\"\"\"\n  voice_script += \"<voice xml:lang='fr-FR' xml:gender='Male' name='fr-FR-RemyMultilingualNeural'>\"\n  \n  voice_script += \"<p>\"\n  voice_script += f\"{item.json.get(\"question\")}\"\n  if True: \n    voice_script += f\"<audio src='{audio_break}'/>\"\n  else:\n    voice_script += \"<break time='5s'/>\"\n  if True: \n    voice_script += f\"<audio src='{audio_correct_answer}'/>\"\n  voice_script += f\"RÃ©ponse {item.json.get(\"correct_answer\")} \"\n  voice_script += \"<break strength='medium' />\"\n  voice_script += f\"{item.json.get(f\"option_{item.json.get(\"correct_answer\").lower()}\")}\"\n  voice_script += \"</p>\"\n\n  voice_script += \"</voice></speak>\"\n\n  item.json.voice_script = voice_script\n\n\nreturn _input.all()"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                960,
                560
            ],
            "id": "5aed2c62-3b22-4143-82a6-bc6ce089fec7",
            "name": "Get voice prompting"
        },
        {
            "parameters": {
                "content": "[Azure Portal](https://portal.azure.com)",
                "height": 80,
                "width": 150,
                "color": 5
            },
            "type": "n8n-nodes-base.stickyNote",
            "position": [
                64,
                464
            ],
            "typeVersion": 1,
            "id": "baec10bc-b934-4b6e-b695-a69cdaf6701b",
            "name": "Sticky Note"
        },
        {
            "parameters": {
                "assignments": {
                    "assignments": [
                        {
                            "id": "50d0fc56-410d-4d0c-982c-a1e88487d282",
                            "name": "question",
                            "value": 7,
                            "type": "number"
                        },
                        {
                            "id": "4b601a48-f14a-4fb9-a41a-66e891265f50",
                            "name": "audio_break",
                            "value": "https://quizz7.blob.core.windows.net/sound/break_audio_5secondes.mp3?sp=r&st=2025-09-09T01:11:05Z&se=2035-09-09T09:26:05Z&spr=https&sv=2024-11-04&sr=b&sig=su%2F%2FqxfKBtwPJ7x2KIckTipXaPKAEqVD0fsXqCMTJaQ%3D",
                            "type": "string"
                        },
                        {
                            "id": "ef2d3584-9047-4d2e-8941-7e871ea66813",
                            "name": "audio_correct_answer",
                            "value": "https://quizz7.blob.core.windows.net/sound/correct_answer_1.mp3?sp=r&st=2025-09-09T00:57:01Z&se=2035-09-09T09:12:01Z&spr=https&sv=2024-11-04&sr=b&sig=5ahXIO9WfmNH8GfT44beTyCAGWF6QvRUQe2h6eY8ijM%3D",
                            "type": "string"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.set",
            "typeVersion": 3.4,
            "position": [
                -336,
                640
            ],
            "id": "3ad7dc1c-5a09-4d31-88eb-7830b9aac15b",
            "name": "Global Fields"
        },
        {
            "parameters": {
                "method": "POST",
                "url": "https://westeurope.tts.speech.microsoft.com/cognitiveservices/v1",
                "authentication": "genericCredentialType",
                "genericAuthType": "httpHeaderAuth",
                "sendHeaders": true,
                "headerParameters": {
                    "parameters": [
                        {
                            "name": "X-Microsoft-OutputFormat",
                            "value": "audio-16khz-128kbitrate-mono-mp3"
                        },
                        {
                            "name": "User-Agent",
                            "value": "SnakeTech"
                        }
                    ]
                },
                "sendBody": true,
                "contentType": "raw",
                "rawContentType": "application/ssml+xml",
                "body": "={{ $json.voice_script }}",
                "options": {}
            },
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 4.2,
            "position": [
                1168,
                560
            ],
            "id": "db688aaa-9047-492f-9013-78511c1b69cb",
            "name": "Generate Voice",
            "credentials": {
                "httpHeaderAuth": {
                    "id": "l6NvN4FQFZ0OQb13",
                    "name": "Azure SnakeTech account"
                },
                "httpBearerAuth": {
                    "id": "YOplG9WUCOFF5T4t",
                    "name": "Bearer Azure SnakeTech account"
                }
            }
        },
        {
            "parameters": {
                "tableId": "QCM Questions",
                "dataToSend": "autoMapInputData"
            },
            "type": "n8n-nodes-base.supabase",
            "typeVersion": 1,
            "position": [
                1488,
                736
            ],
            "id": "4d9d84bb-20e4-47f2-8571-39bc0b38a0d5",
            "name": "Create a row",
            "credentials": {
                "supabaseApi": {
                    "id": "WbnVqEv2ZGhdAeSX",
                    "name": "Supabase SnakeTech"
                }
            }
        },
        {
            "parameters": {
                "language": "python",
                "pythonCode": "# Loop over input items and add a new field called 'myNewField' to the JSON of each one\nimport json\nimport re\n\ntext = _input.first().json.text\n\njson_content = re.search(\"```json\\n([\\s\\S]*?)\\n```\", text)[1]\n\nquestions = json.loads(json_content)\n\nall_questions_items = _('Rename Keys').all()\nall_questions = [item.get(\"question\", \"\").strip().lower() for item in all_questions_items]\n\nnew_questions = [q1 for q1 in questions if q1.get(\"question\", \"\").strip().lower() not in all_questions]\n\nreturn new_questions"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                1072,
                736
            ],
            "id": "57dff129-12d2-466a-9f9d-0349b493a1da",
            "name": "Get new questions"
        },
        {
            "parameters": {
                "resource": "databasePage",
                "databaseId": {
                    "__rl": true,
                    "value": "25843d11-1336-80be-aa2c-cad738ad1c7b",
                    "mode": "list",
                    "cachedResultName": "QCM Questions Database",
                    "cachedResultUrl": "https://www.notion.so/25843d11133680beaa2ccad738ad1c7b"
                },
                "propertiesUi": {
                    "propertyValues": [
                        {
                            "key": "CreatedAt|date",
                            "date": "={{ $now.format('yyyy-MM-dd HH:mm:ss') }}"
                        },
                        {
                            "key": "Question|title",
                            "title": "={{ $json.question }}"
                        },
                        {
                            "key": "Option A|rich_text",
                            "textContent": "={{ $json.option_a }}"
                        },
                        {
                            "key": "Option B|rich_text",
                            "textContent": "={{ $json.option_b }}"
                        },
                        {
                            "key": "Option C|rich_text",
                            "textContent": "={{ $json.option_c }}"
                        },
                        {
                            "key": "Option D|rich_text",
                            "textContent": "={{ $json.option_d }}"
                        },
                        {
                            "key": "Correct Answer|select",
                            "selectValue": "={{ $json.correct_answer.toUpperCase() }}"
                        },
                        {
                            "key": "Category|select",
                            "selectValue": "={{ $json.category }}"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.notion",
            "typeVersion": 2.2,
            "position": [
                1280,
                736
            ],
            "id": "a26f574e-b64f-4cf7-adc5-cbaa336b5359",
            "name": "Create a database page",
            "credentials": {
                "notionApi": {
                    "id": "g3AwBtYd70JlJQfn",
                    "name": "Notion SnakeTech account"
                }
            }
        },
        {
            "parameters": {
                "model": "deepseek/deepseek-chat-v3-0324",
                "options": {}
            },
            "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
            "typeVersion": 1,
            "position": [
                736,
                976
            ],
            "id": "17a5d6ea-3270-4911-bb48-55da80bf9a2a",
            "name": "OpenRouter Chat Model1",
            "credentials": {
                "openRouterApi": {
                    "id": "eJL3ulSkeT8Q0dwT",
                    "name": "OpenRouter account"
                }
            }
        },
        {
            "parameters": {
                "promptType": "define",
                "text": "=GÃ©nÃ¨re {{ Math.abs($json.unused_questions_count - 8) }} QCM. Dans le \"correct_answer\" ne met que la lettre. Format les informations Ã  l'aide du JSON suivant. \n\n{\n  \"question\": \"\",\n  \"option_a\": \"\",\n  \"option_b\": \"\",\n  \"option_c\": \"\",\n  \"option_d\": \"\",\n  \"correct_answer\": \"\",\n  \"category\": \"\"\n}\n\nN'affiche que le JSON. Et ajoute le rÃ©sultat systÃ©matique dans une liste.",
                "batching": {}
            },
            "type": "@n8n/n8n-nodes-langchain.chainLlm",
            "typeVersion": 1.7,
            "position": [
                736,
                736
            ],
            "id": "662dd6e4-3dfb-4dfc-8350-75da4a2c36eb",
            "name": "Basic LLM Chain"
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 2
                    },
                    "conditions": [
                        {
                            "id": "dc084b13-d6ff-40c9-99fa-a161fa9926eb",
                            "leftValue": "={{ $json.unused_questions_count % 8}}",
                            "rightValue": 0,
                            "operator": {
                                "type": "number",
                                "operation": "equals"
                            }
                        }
                    ],
                    "combinator": "and"
                },
                "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
                448,
                640
            ],
            "id": "00280a24-c249-411e-aad3-5c51c3941c15",
            "name": "If"
        },
        {
            "parameters": {
                "assignments": {
                    "assignments": [
                        {
                            "id": "307df18a-1dfb-4f37-87df-8e4c5f9bed1a",
                            "name": "unused_questions_count",
                            "value": "={{ $input.all().filter(item => item.json.used === false).length }}",
                            "type": "number"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.set",
            "typeVersion": 3.4,
            "position": [
                256,
                640
            ],
            "id": "1d9d1283-2c65-4d6c-acf1-40562c098195",
            "name": "UnUsed",
            "executeOnce": true
        },
        {
            "parameters": {
                "additionalOptions": {
                    "regexReplacement": {
                        "replacements": [
                            {
                                "searchRegex": "^property_(.*)",
                                "replaceRegex": "=$1",
                                "options": {}
                            }
                        ]
                    }
                }
            },
            "type": "n8n-nodes-base.renameKeys",
            "typeVersion": 1,
            "position": [
                64,
                640
            ],
            "id": "779e9388-c3ce-4404-a931-452ba411f06a",
            "name": "Rename Keys"
        },
        {
            "parameters": {
                "resource": "databasePage",
                "operation": "getAll",
                "databaseId": {
                    "__rl": true,
                    "value": "25843d11-1336-80be-aa2c-cad738ad1c7b",
                    "mode": "list",
                    "cachedResultName": "QCM Questions Database",
                    "cachedResultUrl": "https://www.notion.so/25843d11133680beaa2ccad738ad1c7b"
                },
                "options": {}
            },
            "type": "n8n-nodes-base.notion",
            "typeVersion": 2.2,
            "position": [
                -128,
                640
            ],
            "id": "2beb6e12-5e5d-4dbb-b460-13be978214ed",
            "name": "Get many database pages",
            "credentials": {
                "notionApi": {
                    "id": "g3AwBtYd70JlJQfn",
                    "name": "Notion SnakeTech account"
                }
            }
        },
        {
            "parameters": {},
            "type": "n8n-nodes-base.manualTrigger",
            "typeVersion": 1,
            "position": [
                -544,
                640
            ],
            "id": "750403d1-97fc-4154-8fe6-412fa6c363bd",
            "name": "When clicking âExecute workflowâ"
        }
    ],
    "connections": {
        "Update a row": {
            "main": [
                []
            ]
        },
        "Translate a language": {
            "main": [
                [
                    {
                        "node": "Replicate leonardoai/lucid-origin",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Replicate leonardoai/lucid-origin": {
            "main": [
                [
                    {
                        "node": "HTTP Request",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get limited question": {
            "main": [
                [
                    {
                        "node": "Translate a language",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Get voice prompting",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Global Fields": {
            "main": [
                [
                    {
                        "node": "Get many database pages",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get voice prompting": {
            "main": [
                [
                    {
                        "node": "Generate Voice",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Create a row": {
            "main": [
                [
                    {
                        "node": "Get many database pages",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get new questions": {
            "main": [
                [
                    {
                        "node": "Create a database page",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Create a database page": {
            "main": [
                [
                    {
                        "node": "Create a row",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "OpenRouter Chat Model1": {
            "ai_languageModel": [
                [
                    {
                        "node": "Basic LLM Chain",
                        "type": "ai_languageModel",
                        "index": 0
                    }
                ]
            ]
        },
        "Basic LLM Chain": {
            "main": [
                [
                    {
                        "node": "Get new questions",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "If": {
            "main": [
                [
                    {
                        "node": "Get limited question",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "Basic LLM Chain",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "UnUsed": {
            "main": [
                [
                    {
                        "node": "If",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Rename Keys": {
            "main": [
                [
                    {
                        "node": "UnUsed",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Get many database pages": {
            "main": [
                [
                    {
                        "node": "Rename Keys",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "When clicking âExecute workflowâ": {
            "main": [
                [
                    {
                        "node": "Global Fields",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "settings": {
        "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
        "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "1b08458c-b34b-4719-b16e-100aabcb2a74",
    "triggerCount": 0,
    "shared": [
        {
            "createdAt": "2025-08-23T21:53:58.424Z",
            "updatedAt": "2025-08-23T21:53:58.424Z",
            "role": "workflow:owner",
            "workflowId": "aw4R5UbolnyUZ37J",
            "projectId": "lnYpJLFYV8VS8Mcd"
        }
    ],
    "tags": [
        {
            "createdAt": "2025-09-10T23:32:33.122Z",
            "updatedAt": "2025-09-10T23:32:33.122Z",
            "id": "956DbmwDfLDZv1Pp",
            "name": "video"
        },
        {
            "createdAt": "2025-09-10T23:32:58.914Z",
            "updatedAt": "2025-09-10T23:32:58.914Z",
            "id": "NWOO0ntGZ0QB7lNA",
            "name": "social media"
        }
    ]
}